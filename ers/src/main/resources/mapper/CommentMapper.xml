<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lfm.ers.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.lfm.ers.entity.Comment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="agree_count" property="agreeCount" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="question_id" property="questionId" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="CommentDetail" type="com.lfm.ers.vo.CommentDetail" extends="BaseResultMap">
    <result column="user_name"  property="userName"/>
    <result column="photo" property="photo"/>
    <result column="agreed" property="agreed"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id, content, user_id, agree_count, state, create_time, question_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lfm.ers.entity.Comment" >
    insert into comment (id, content, user_id,
    agree_count, state, create_time,
    question_id)
    values (#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER},
    #{agreeCount,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
    #{questionId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lfm.ers.entity.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="agreeCount != null" >
        agree_count,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="questionId != null" >
        question_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="agreeCount != null" >
        #{agreeCount,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="questionId != null" >
        #{questionId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lfm.ers.entity.Comment" >
    update comment
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="agreeCount != null" >
        agree_count = #{agreeCount,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="questionId != null" >
        question_id = #{questionId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lfm.ers.entity.Comment" >
    update comment
    set content = #{content,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      agree_count = #{agreeCount,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      question_id = #{questionId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- add -->

  <select id="selectDetailCommentByQuestionId" resultMap="CommentDetail">
    select
      co.*,su.`name` user_name,su.photo,if(a.id,1,0)  agreed
			from `comment` co
    join question qu on qu.id = co.question_id
    join sys_user su on co.user_id = su.id
		left join agree a on (co.id = a.comment_id and a.user_id = #{userId})
    where qu.id =  #{questionId}
    order by co.agree_count desc
  </select>

  <select id="selectByQidAndId" resultMap="BaseResultMap">
    select
      co.*
    from `comment` co
    join question qu on co.question_id = qu.id
    where qu.id = #{questionId} and co.id = #{id}
  </select>
</mapper>